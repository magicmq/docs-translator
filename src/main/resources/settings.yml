general:
  loggingLevel: 'INFO'

sourceJars:
  path: 'jars'
  deleteOnStart: true
  download: true
  urls:
    - 'https://hub.spigotmc.org/nexus/repository/snapshots/org/spigotmc/spigot-api/1.20.6-R0.1-SNAPSHOT/spigot-api-1.20.6-R0.1-20240613.150924-57-sources.jar'
    - 'https://hub.spigotmc.org/nexus/repository/sonatype-nexus-snapshots/net/md-5/bungeecord-chat/1.20-R0.2-SNAPSHOT/bungeecord-chat-1.20-R0.2-20240119.213604-65-sources.jar'
    - 'https://repo1.maven.org/maven2/com/google/code/gson/gson/2.10.1/gson-2.10.1-sources.jar'
    - 'https://repo1.maven.org/maven2/com/google/guava/guava/32.1.2-jre/guava-32.1.2-jre-sources.jar'
    - 'https://repo1.maven.org/maven2/org/joml/joml/1.10.5/joml-1.10.5-sources.jar'
    - 'https://repo1.maven.org/maven2/org/yaml/snakeyaml/2.2/snakeyaml-2.2-sources.jar'

jdkSources:
  translate: true
  path: 'jdk-sources'
  name: 'jdk'
  version: '17'

output:
  path: 'generated'
  deleteOnStart: true

importExclusions:
  packages:
    - 'java.lang'
    - 'java.lang.annotation'
    - 'java.awt'
    - 'java.awt.image'
    - 'java.sql'
    - 'java.beans'
    - 'java.util.logging'
    - 'java.nio'
    - 'java.nio.channels'
  classes:
   - 'java.lang.Thread.UncaughtExceptionHandler'
   - 'java.util.Collection'
   - 'java.util.List'
   - 'java.util.ArrayList'
   - 'java.util.LinkedList'
   - 'java.util.Set'
   - 'java.util.HashSet'
   - 'java.util.TreeSet'
   - 'java.util.Map'
   - 'java.util.Map.Entry'
   - 'java.util.AbstractMap'
   - 'java.util.AbstractMap.SimpleImmutableEntry'
   - 'java.util.HashMap'
   - 'java.util.TreeMap'
   - 'java.util.LinkedHashMap'
   - 'java.util.Spliterators'
   - 'java.util.Spliterators.AbstractSpliterator'
   - 'java.nio.channels.FileChannel.MapMode'
   - 'org.jetbrains.annotations.Contract'
   - 'org.jetbrains.annotations.NotNull'
   - 'org.jetbrains.annotations.Nullable'
   - 'org.jetbrains.annotations.ApiStatus'
   - 'java.lang.annotation.ElementType'
   - 'java.lang.annotation.Retention'
   - 'java.lang.annotation.RetentionPolicy'
   - 'java.lang.annotation.Target'
   - 'lombok.AllArgsConstructor'
   - 'lombok.NoArgsConstructor'
   - 'lombok.RequiredArgsConstructor'
   - 'lombok.Getter'
   - 'lombok.Setter'
   - 'lombok.AccessLevel'
   - 'lombok.EqualsAndHashCode'
   - 'lombok.ToString'
   - 'lombok.Builder'
   - 'lombok.Data'

formats:
  module:
    docString: |
      """
      Python module generated from Java source file %class%
      
      Java source file obtained from artifact %artifact_id% version %artifact_version%
      
      Because this Python module is automatically generated, it may contain errors
      and/or code that cannot be parsed. Please report these issues at
      https://github.com/magicmq/docs-translator/issues
      """
    importDeclaration: 'from %package% import %module%'
  class_:
    declaration: 'class %name%:'
    declarationExtending: 'class %name%(%extends%):'
  enum:
    declaration: 'class %name%(Enum):'
    entryRegular: '%name% = %num%'
    entryWithArgs: '%name% = (%args%)'
  function:
    initDefinition: 'def __init__(%params%):'
    definition: 'def %name%(%params%) -> %returns%:'
    parameterRegular: '%name%: %type%'
    parameterVararg: '*%name%: Tuple[%type%, ...]'
    returnRegular: '...'
    returnWithValue: 'return %value%'
  field:
    initializer: '%name% = %value%'
  docString:
    author: 'Author(s)'
    deprecated: 'Deprecated'
    params: 'Arguments'
    param: '- %param%: %text%'
    typeParam: 'Type `%type%`: %text%'
    returns: 'Returns'
    see: 'See'
    serial: 'Serial'
    serialData: 'Serial Data'
    serialField: 'Serial Field'
    since: 'Since'
    throws: 'Raises'
    throw: '- %throw%: %text%'
    version: 'Version'
    unknown: 'Unknown Tags'
  packaging:
    setup: |
      from setuptools import setup, find_namespace_packages
      
      setup(
          name='%name%',
          version='%version%',
          author='%author%',
          author_email='%author_email%',
          description='%description%',
          url='%url%',
          py_modules=[%py_modules%],
          packages=find_namespace_packages(),
          python_requires='%python_requires%',
          classifiers = [
              %classifiers%
          ],
      )
    pyProject: |
      [build-system]
      requires = [%requires%]
      build-backend = "%build_backend%"

packaging:
  setup:
    name: '%artifact_id%-%artifact_version%'
    version: '1.0'
    author: 'magicmq'
    authorEmail: 'business@magicmq.dev'
    description: 'Translated Java sources (Spigot) for writing PySpigot scripts'
    url: 'https://pyspigot-docs.magicmq.dev'
    pyModules:
      - 'pyspigot'
    pythonRequires: '>=3.6'
    classifiers:
      - 'Programming Language :: Python :: 3'
      - 'Natural Language :: English'
      - 'Topic :: Software Development :: Libraries :: Java Libraries'
      - 'License :: OSI Approved :: Apache Software License'
  pyProject:
    requires:
      - 'setuptools>=42'
      - 'wheel'
    buildBackend: 'setuptools.build_meta'
  manifest:
    - 'include LICENSE'
  license: 'https://www.apache.org/licenses/LICENSE-2.0.txt'